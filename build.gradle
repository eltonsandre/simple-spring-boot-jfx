plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
    set('openjfxVersion', '11.0.2')
    set('jfxtrasVersion', '10.0-r1')
}


group = 'com.github.eltonsandre'
version = '0.0.1-SNAPSHOT'
mainClassName = "${group}.app.Application"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.openjfx:javafx-controls:$openjfxVersion",
            "org.openjfx:javafx-fxml:$openjfxVersion",
            "org.openjfx:javafx-graphics:$openjfxVersion",

            "com.jfoenix:jfoenix:9.0.9",
            "org.jfxtras:jfxtras-common:$jfxtrasVersion",
            "org.jfxtras:jfxtras-fxml:$jfxtrasVersion",
            "org.jfxtras:jfxtras-font-roboto:$jfxtrasVersion",
            "org.jfxtras:jfxtras-menu:$jfxtrasVersion",
            "org.jfxtras:jfxtras-controls:$jfxtrasVersion",

            "org.apache.commons:commons-lang3:3.9",
            "org.apache.commons:commons-collections4:4.4",
            "com.google.code.gson:gson",

//          'org.flywaydb:flyway-core",
            'org.springframework.boot:spring-boot-starter',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.mapstruct:mapstruct-jdk8:1.3.1.Final'


    runtimeOnly 'com.h2database:h2',
            'mysql:mysql-connector-java'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor',
            'org.mapstruct:mapstruct-processor:1.3.1.Final'

    ['annotationProcessor', 'compileOnly', 'testAnnotationProcessor', 'testCompileOnly']
            .each { conf -> add(conf, 'org.projectlombok:lombok') }

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


javafx {
    version = openjfxVersion
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.swing', 'javafx.web']
}

applicationDefaultJvmArgs = [
        '--add-opens', 'javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.collections=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.event=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.logging=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
        '--add-opens', 'javafx.base/com.sun.javafx.runtime=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.application=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.input=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED',
        '--add-opens', 'javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED',
//        '--add-opens', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
//        '--add-opens', 'javafx.graphics/com.sun.javafx.util.Utils=ALL-UNNAMED'
//        '--add-opens', 'javafx.fxml/com.sun.javafx.util.Utils=ALL-UNNAMED'
]

test {
    useJUnitPlatform()
}
